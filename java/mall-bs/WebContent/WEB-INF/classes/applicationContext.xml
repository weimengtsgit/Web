<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 导入外部文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 配置dataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		
	</bean>

	<!-- 配置sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<property name="entityInterceptor">
			<bean id ="queryInterceptor" class="org.ever4j.main.interceptor.QueryInterceptor" />
		</property>
		<property name="packagesToScan" value="org.ever4j.*.entity,com.dearcom.*.entity" />
	</bean>

	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置异常管理 -->
	<bean id="customExceptionHandler" class="org.ever4j.main.exception.CustomExceptionHandler"/>

	<!-- 激活Spring注解方式：事务处理 -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- 激活Spring注解方式：自动扫描，并注入bean -->
	<context:component-scan base-package="org.ever4j.*.*" />
	<context:component-scan base-package="com.dearcom.*.*" />
	
	<!-- 性能监控 -->
	<bean id="performanceMonitor"
          class="org.springframework.aop.interceptor.PerformanceMonitorInterceptor" />

	<aop:config>
	    <aop:pointcut id="allServiceMethods" expression="execution(* com.dearcom.*.action.*(..))"/>
	    <aop:advisor pointcut-ref="allServiceMethods" advice-ref="performanceMonitor" order="2"/>
	</aop:config>
 	<!-- 日志记录-->
 	<bean id="loggerAdvice" class="org.ever4j.utils.aop.LoggerAdvice" />
	<aop:config proxy-target-class="true"></aop:config>
	<aop:config>  
     	<aop:advisor pointcut="execution(* org.base4j.orm.hibernate.BaseService+.save*(..)) " advice-ref="loggerAdvice"/>  
     	<aop:advisor pointcut="execution(* org.base4j.orm.hibernate.BaseService+.delete*(..)) " advice-ref="loggerAdvice"/>  
     	<aop:advisor pointcut="execution(* org.base4j.orm.hibernate.BaseService+.update*(..)) " advice-ref="loggerAdvice"/>  
    </aop:config>  
</beans>